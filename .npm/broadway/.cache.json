{"_id":"broadway","_rev":"62-8067bd33e60cab3440a55d24ba14c502","name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","dist-tags":{"latest":"0.2.9"},"versions":{"0.1.0":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.0","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/flatiron.git"},"dependencies":{"eventemitter2":"0.4.x","nconf":"0.4.x >=0.4.3","nconf-redis":"0.2.x","optimist":"0.2.x","winston":"0.5.x >=0.5.2","utile":"0.x.x"},"devDependencies":{"vows":"0.5.x"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.1.0","_engineSupported":true,"_npmVersion":"1.0.103","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"bee8427040761fede74eea74fc72d6899886c317","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.0.tgz"},"maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"directories":{}},"0.1.1":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.1","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"eventemitter2":"0.4.x","nconf":"0.5.x","optimist":"0.2.x","winston":"0.5.x >=0.5.2","utile":"0.x.x"},"devDependencies":{"vows":"0.5.x"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.1.1","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"8de2ac87034e79d714182c1161fd00426de43108","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.1.tgz"},"maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"directories":{}},"0.1.2":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.2","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"eventemitter2":"0.4.x","nconf":"0.5.x","optimist":"0.2.x","winston":"0.5.x >=0.5.2","utile":"0.x.x"},"devDependencies":{"vows":"0.5.x"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.1.2","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"985c21d193f734d1c8e9c2cd3cbf9b49b92ef290","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.2.tgz"},"maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"directories":{}},"0.1.3":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.3","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"eventemitter2":"0.4.1","nconf":"0.5.0","optimist":"0.2.8","winston":"0.5.9","utile":"0.0.9"},"devDependencies":{"vows":"0.6.0"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.1.3","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"a3b2a711f5642d05c44f2d9073d756cfb24e8b53","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.3.tgz"},"maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"directories":{}},"0.1.4":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.4","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"eventemitter2":"0.4.1","nconf":"0.5.0","optimist":"0.2.8","winston":"0.5.9","utile":"0.0.9"},"devDependencies":{"vows":"0.6.0"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.1.4","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"8b89b9af179a67251ec8015b49d5e9ad975e3d1f","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.4.tgz"},"maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"directories":{}},"0.1.5":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.5","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"eventemitter2":"0.4.1","nconf":"0.5.0","optimist":"0.2.8","winston":"0.5.9","utile":"0.0.10"},"devDependencies":{"codesurgeon":"0.2.x","colors":"0.6.x","uglify-js":"1.0.6","vows":"0.6.0"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.1.5","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"7870c347ed9b414058a94d401912536ecf3e04c1","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.5.tgz"},"maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"directories":{}},"0.1.6":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.6","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"eventemitter2":"0.4.1","nconf":"0.5.1","optimist":"0.3.1","winston":"0.5.9","utile":"0.0.10"},"devDependencies":{"codesurgeon":"0.2.x","colors":"0.6.x","uglify-js":"1.0.6","vows":"0.6.0"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.1.6","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.7","_defaultsLoaded":true,"dist":{"shasum":"f3de1dd451f9e6b8c4b919c47e58a19f988ecc9b","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.6.tgz"},"maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"directories":{}},"0.1.7":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.7","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"eventemitter2":"0.4.1","nconf":"0.5.1","optimist":"0.3.1","winston":"0.5.9","utile":"0.0.10"},"devDependencies":{"codesurgeon":"0.2.x","colors":"0.6.x","uglify-js":"1.0.6","vows":"0.6.0"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.1.7","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.7","_defaultsLoaded":true,"dist":{"shasum":"f3cebc18509dc2681e1acb9da4a0cfd5a41e09bf","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.7.tgz"},"maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"directories":{}},"0.1.8":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.8","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"},{"name":"Paolo Fragomeni","email":"paolo@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"eventemitter2":"0.4.3","nconf":"0.5.1","optimist":"0.3.1","winston":"0.5.9","utile":"0.0.10"},"devDependencies":{"codesurgeon":"0.2.x","colors":"0.6.x","uglify-js":"1.0.6","vows":"0.6.0"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.1.8","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-2","_nodeVersion":"v0.6.7","_defaultsLoaded":true,"dist":{"shasum":"2e13c0fb0a428fb64cfa8a1dbd625af562f19e6b","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.8.tgz"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  }\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  }\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"directories":{}},"0.1.9":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.9","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"},{"name":"Paolo Fragomeni","email":"paolo@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"colors":"0.6.0-1","cliff":"0.1.6","eventemitter2":"0.4.3","nconf":"0.5.1","optimist":"0.3.1","winston":"0.5.9","utile":"0.0.10"},"devDependencies":{"codesurgeon":"0.2.x","uglify-js":"1.0.6","vows":"0.6.0"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.1.9","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-2","_nodeVersion":"v0.6.7","_defaultsLoaded":true,"dist":{"shasum":"3e1dd9add5e851467c7681b1722ef5d7c80ebfcc","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.9.tgz"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  }\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  }\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"directories":{}},"0.1.10":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.10","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"},{"name":"Paolo Fragomeni","email":"paolo@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"colors":"0.6.0-1","cliff":"0.1.7","eventemitter2":"0.4.3","nconf":"0.5.1","optimist":"0.3.1","winston":"0.5.9","utile":"0.0.10"},"devDependencies":{"codesurgeon":"0.2.x","uglify-js":"1.0.6","vows":"0.6.0"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.1.10","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-2","_nodeVersion":"v0.6.7","_defaultsLoaded":true,"dist":{"shasum":"b25f3785a06d28a616f3351f0ea94202976055c5","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.10.tgz"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  }\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  }\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"directories":{}},"0.1.11":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.11","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"},{"name":"Paolo Fragomeni","email":"paolo@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"colors":"0.6.0-1","cliff":"0.1.7","eventemitter2":"0.4.8","nconf":"0.5.1","optimist":"0.3.1","winston":"0.5.10","utile":"0.0.10"},"devDependencies":{"codesurgeon":"0.2.x","uglify-js":"1.0.6","vows":"0.6.0"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.1.11","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.10","_defaultsLoaded":true,"dist":{"shasum":"56206e9512e4bac90c0057e39656e5d0efdb4e12","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.11.tgz"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  }\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  }\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"directories":{}},"0.1.13":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.13","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"},{"name":"Paolo Fragomeni","email":"paolo@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"colors":"0.6.0-1","cliff":"0.1.7","eventemitter2":"0.4.8","nconf":"0.5.1","optimist":"0.3.1","winston":"0.5.10","utile":"0.0.10"},"devDependencies":{"codesurgeon":"0.2.x","uglify-js":"1.0.6","vows":"0.6.x"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"avianflu","email":"charlie@charlieistheman.com"},"_id":"broadway@0.1.13","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.11","_defaultsLoaded":true,"dist":{"shasum":"761de72babc30cfc9e2b31c6c6bca3385e3b1e38","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.13.tgz"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  }\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  }\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"avianflu","email":"charlie@charlieistheman.com"}],"directories":{}},"0.1.14":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.14","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"},{"name":"Paolo Fragomeni","email":"paolo@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"colors":"0.6.0-1","cliff":"0.1.7","eventemitter2":"0.4.9","nconf":"0.5.1","optimist":"0.3.1","winston":"0.5.10","utile":"0.0.10"},"devDependencies":{"codesurgeon":"0.2.x","uglify-js":"1.0.6","vows":"0.6.x"},"scripts":{"test":"vows test/**/*-test.js --spec -i"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"avianflu","email":"charlie@charlieistheman.com"},"_id":"broadway@0.1.14","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.9","_nodeVersion":"v0.6.13","_defaultsLoaded":true,"dist":{"shasum":"5e6f379cf943c662f83f4eb7eb5709d5556484c0","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.14.tgz"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  }\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  }\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"avianflu","email":"charlie@charlieistheman.com"}],"directories":{}},"0.1.15":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.1.15","contributors":[{"name":"Charlie Robbins","email":"charlie@nodejitsu.com"},{"name":"Paolo Fragomeni","email":"paolo@nodejitsu.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"colors":"0.6.0-1","cliff":"0.1.7","eventemitter2":"0.4.9","nconf":"0.5.1","optimist":"0.3.1","winston":"0.5.11","utile":"0.0.10"},"devDependencies":{"codesurgeon":"0.2.x","uglify-js":"1.0.6","vows":"0.6.x"},"scripts":{"test":"vows test/**/*-test.js --spec"},"main":"./lib/broadway","engines":{"node":">= 0.4.0"},"_npmUser":{"name":"avianflu","email":"charlie@charlieistheman.com"},"_id":"broadway@0.1.15","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.17","_defaultsLoaded":true,"dist":{"shasum":"4b9c949af2c39373a19f91c54f8a046e131234ad","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.1.15.tgz"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  }\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  }\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"avianflu","email":"charlie@charlieistheman.com"}],"directories":{}},"0.2.0":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.2.0","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"avianflu","email":"charlie@charlieistheman.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"colors":"0.6.0-1","cliff":"0.1.7","eventemitter2":"0.4.9","nconf":"0.5.1","optimist":"0.3.4","winston":"0.5.11","utile":"0.1.0"},"devDependencies":{"codesurgeon":"0.2.x","uglify-js":"1.0.6","vows":"0.6.x"},"scripts":{"test":"vows test/**/*-test.js --spec"},"main":"./lib/broadway","engines":{"node":">= 0.6.4"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.2.0","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.2","_nodeVersion":"v0.6.10","_defaultsLoaded":true,"dist":{"shasum":"4d3bc98bad9192ae0b16da202edf0b99bb844768","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.2.0.tgz"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  }\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  },\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","directories":{}},"0.2.1":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.2.1","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"avianflu","email":"charlie@charlieistheman.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"colors":"0.6.0-1","cliff":"0.1.7","eventemitter2":"0.4.9","nconf":"0.5.1","winston":"0.6.1","utile":"0.1.1"},"devDependencies":{"codesurgeon":"0.2.x","uglify-js":"1.0.6","vows":"0.6.x"},"scripts":{"test":"vows test/**/*-test.js --spec"},"main":"./lib/broadway","engines":{"node":">= 0.6.4"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.2.1","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.2","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"080530b336e347c342af60c13b6b582de8162cf4","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.2.1.tgz"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  }\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  },\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","directories":{}},"0.2.3":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.2.3","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"avianflu","email":"charlie@charlieistheman.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"cliff":"0.1.8","eventemitter2":"0.4.9","nconf":"0.6.1","winston":"0.6.2","utile":"0.1.2"},"devDependencies":{"codesurgeon":"0.2.x","uglify-js":"1.0.6","vows":"0.6.x"},"scripts":{"test":"vows test/**/*-test.js --spec"},"main":"./lib/broadway","engines":{"node":">= 0.6.4"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.2.3","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.2","_nodeVersion":"v0.8.1","_defaultsLoaded":true,"dist":{"shasum":"ba590495def78fd9aab9a66dd19d121538f8f718","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.2.3.tgz"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  };\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  },\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","directories":{}},"0.2.4":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.2.4","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"avianflu","email":"charlie@charlieistheman.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"cliff":"0.1.8","eventemitter2":"0.4.9","nconf":"0.6.3","winston":"0.6.2","utile":"0.1.2"},"devDependencies":{"codesurgeon":"0.2.x","uglify-js":"1.0.6","vows":"0.6.x"},"scripts":{"test":"vows test/**/*-test.js --spec"},"main":"./lib/broadway","engines":{"node":">= 0.6.4"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.2.4","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.2","_nodeVersion":"v0.8.1","_defaultsLoaded":true,"dist":{"shasum":"c75342b9f72c50bdeec242872950e6eee40d3f58","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.2.4.tgz"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  };\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  },\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","directories":{}},"0.2.5":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.2.5","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"avianflu","email":"charlie@charlieistheman.com"}],"repository":{"type":"git","url":"git://github.com/flatiron/broadway.git"},"dependencies":{"cliff":"0.1.8","eventemitter2":"0.4.9","nconf":"0.6.4","winston":"0.6.2","utile":"0.1.2"},"devDependencies":{"codesurgeon":"0.2.x","uglify-js":"1.0.6","vows":"0.6.x"},"scripts":{"test":"vows test/**/*-test.js --spec"},"main":"./lib/broadway","engines":{"node":">= 0.6.4"},"_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"_id":"broadway@0.2.5","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.2","_nodeVersion":"v0.8.1","_defaultsLoaded":true,"dist":{"shasum":"c77c3d953862d97dde19394fe39d21b3cc17faba","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.2.5.tgz"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  };\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  },\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","directories":{}},"0.2.6":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.2.6","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"avianflu","email":"charlie@charlieistheman.com"}],"repository":{"type":"git","url":"http://github.com/flatiron/broadway.git"},"dependencies":{"cliff":"0.1.8","eventemitter2":"0.4.11","nconf":"0.6.7","winston":"0.6.2","utile":"0.1.6"},"devDependencies":{"codesurgeon":"0.3.x","uglify-js":"1.0.6","vows":"0.6.x"},"scripts":{"test":"vows test/**/*-test.js --spec"},"main":"./lib/broadway","engines":{"node":">= 0.6.4"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  };\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  },\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","readmeFilename":"README.md","_id":"broadway@0.2.6","dist":{"shasum":"b3b96d7085da184945e6d73d4523a5768c37f5f7","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.2.6.tgz"},"_npmVersion":"1.1.66","_npmUser":{"name":"indexzero","email":"charlie.robbins@gmail.com"},"directories":{}},"0.2.7":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.2.7","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"avianflu","email":"charlie@charlieistheman.com"},{"name":"mmalecki","email":"me@mmalecki.com"}],"repository":{"type":"git","url":"http://github.com/flatiron/broadway.git"},"dependencies":{"cliff":"0.1.8","eventemitter2":"0.4.11","nconf":"0.6.7","winston":"0.6.2","utile":"0.1.7"},"devDependencies":{"codesurgeon":"0.3.x","uglify-js":"1.0.6","vows":"0.7.x"},"scripts":{"test":"vows test/**/*-test.js --spec"},"main":"./lib/broadway","engines":{"node":">= 0.6.4"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  };\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  },\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","readmeFilename":"README.md","_id":"broadway@0.2.7","dist":{"shasum":"3ba2f4b3de163e95e38a4950b61fd5f882a90762","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.2.7.tgz"},"_from":".","_npmVersion":"1.2.7","_npmUser":{"name":"mmalecki","email":"me@mmalecki.com"},"directories":{}},"0.2.8":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.2.8","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"mmalecki","email":"me@mmalecki.com"},{"name":"jcrugzz","email":"jcrugzz@gmail.com"}],"repository":{"type":"git","url":"http://github.com/flatiron/broadway.git"},"dependencies":{"cliff":"0.1.8","eventemitter2":"0.4.12","nconf":"0.6.7","winston":"0.7.2","utile":"0.2.0"},"devDependencies":{"codesurgeon":"0.3.x","uglify-js":"1.0.6","vows":"0.7.x"},"scripts":{"test":"vows test/**/*-test.js --spec"},"main":"./lib/broadway","engines":{"node":">= 0.6.4"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  };\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  },\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/flatiron/broadway/issues"},"_id":"broadway@0.2.8","dist":{"shasum":"3e4751fe2d4142e596a820506f82d02356580c3e","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.2.8.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"jcrugzz","email":"jcrugzz@gmail.com"},"directories":{}},"0.2.9":{"name":"broadway","description":"Lightweight application extensibility and composition with a twist of feature reflection.","author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"version":"0.2.9","maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"mmalecki","email":"me@mmalecki.com"},{"name":"jcrugzz","email":"jcrugzz@gmail.com"}],"repository":{"type":"git","url":"http://github.com/flatiron/broadway.git"},"dependencies":{"cliff":"0.1.8","eventemitter2":"0.4.12","nconf":"0.6.9","winston":"0.7.2","utile":"0.2.1"},"devDependencies":{"codesurgeon":"0.3.x","uglify-js":"1.0.6","vows":"0.7.x"},"scripts":{"test":"vows test/**/*-test.js --spec"},"main":"./lib/broadway","engines":{"node":">= 0.6.4"},"readme":"# broadway [![Build Status](https://secure.travis-ci.org/flatiron/broadway.png)](http://travis-ci.org/flatiron/broadway)\n\n*Lightweight application extensibility and composition with a twist of feature\nreflection.*\n\n## Example\n\n### app.js\n```js\nvar broadway = require(\"broadway\");\n\nvar app = new broadway.App();\n\n// Passes the second argument to `helloworld.attach`.\napp.use(require(\"./plugins/helloworld\"), { \"delimiter\": \"!\" } );\n\napp.init(function (err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\napp.hello(\"world\");\n```\n\n### plugins/helloworld.js\n\n```js\n// `exports.attach` gets called by broadway on `app.use`\nexports.attach = function (options) {\n\n  this.hello = function (world) {\n    console.log(\"Hello \"+ world + options.delimiter || \".\");\n  };\n\n};\n\n// `exports.init` gets called by broadway on `app.init`.\nexports.init = function (done) {\n\n  // This plugin doesn't require any initialization step.\n  return done();\n\n};\n```\n\n### run it!\n\n```bash\njosh@onix:~/dev/broadway/examples$ node simple/app.js \nHello world!\njosh@onix:~/dev/broadway/examples$ \n```\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing broadway\n``` bash \n  $ [sudo] npm install broadway\n```\n\n## API\n\n### App#init(callback)\n\nInitialize application and it's plugins, `callback` will be called with null or\ninitialization error as first argument.\n\n### App#use(plugin, options)\n\nAttach plugin to application. `plugin` should conform to following interface:\n\n```javascript\nvar plugin = {\n  \"name\": \"example-plugin\", // Plugin's name\n\n  \"attach\": function attach(options) {\n    // Called with plugin options once plugin attached to application\n    // `this` - is a reference to application\n  },\n\n  \"detach\": function detach() {\n    // Called when plugin detached from application\n    // (Only if plugin with same name was attached)\n    // `this` - is a reference to application\n  },\n\n  \"init\": function init(callback) {\n    // Called on application initialization\n    // App#init(callback) will be called once every plugin will call `callback`\n    // `this` - is a reference to application\n  }\n};\n```\n\n### App#on(event, callback) and App#emit(event, data)\n\nApp inherits from [EventEmitter2][2], and many plugins build on this\nfunctionality.\n\n#### Built-In Events:\n\n* `error:init`: Broadway emits this event when it throws an error while attempting to initialize.\n\nRead the [EventEmitter2][2] documentation for more information.\n\n## Tests\nAll tests are written with [vows][0] and should be run with [npm][1]:\n\n``` bash\n  $ npm test\n```\n\n#### [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://vowsjs.org\n[1]: http://npmjs.org\n[2]: https://github.com/hij1nx/EventEmitter2\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/flatiron/broadway/issues"},"_id":"broadway@0.2.9","dist":{"shasum":"887008b2257f4171089de5cb9b656969b6c8c9e8","tarball":"http://registry.npmjs.org/broadway/-/broadway-0.2.9.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"jcrugzz","email":"jcrugzz@gmail.com"},"directories":{}}},"maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"},{"name":"mmalecki","email":"me@mmalecki.com"},{"name":"jcrugzz","email":"jcrugzz@gmail.com"}],"time":{"modified":"2013-12-02T06:36:59.527Z","created":"2011-11-09T15:41:44.236Z","0.1.0":"2011-11-09T15:41:45.769Z","0.1.1":"2011-11-28T19:57:17.003Z","0.1.2":"2011-12-02T09:46:07.951Z","0.1.3":"2011-12-06T09:49:40.177Z","0.1.4":"2011-12-09T07:17:50.375Z","0.1.5":"2011-12-23T03:27:16.876Z","0.1.6":"2012-01-15T09:06:39.167Z","0.1.7":"2012-01-18T04:23:40.951Z","0.1.8":"2012-01-23T01:19:02.620Z","0.1.9":"2012-02-08T11:28:32.966Z","0.1.10":"2012-02-09T02:10:16.679Z","0.1.11":"2012-02-23T02:07:27.159Z","0.1.13":"2012-03-02T22:09:02.553Z","0.1.14":"2012-03-21T00:09:41.479Z","0.1.15":"2012-05-06T01:48:00.908Z","0.2.0":"2012-05-23T14:08:45.766Z","0.2.1":"2012-06-08T07:51:31.311Z","0.2.3":"2012-07-08T07:06:56.343Z","0.2.4":"2012-07-10T05:53:35.885Z","0.2.5":"2012-07-10T07:34:43.410Z","0.2.6":"2012-12-23T23:11:11.650Z","0.2.7":"2013-02-23T22:59:58.030Z","0.2.8":"2013-12-02T06:05:22.215Z","0.2.9":"2013-12-02T06:36:59.527Z"},"author":{"name":"Nodejitsu Inc.","email":"info@nodejitsu.com"},"repository":{"type":"git","url":"http://github.com/flatiron/broadway.git"},"users":{"blakmatrix":true},"_attachments":{},"_etag":"\"5O3U2VDCX4AO4L4B591S04V13\""}