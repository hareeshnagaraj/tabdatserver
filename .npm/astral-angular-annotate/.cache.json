{"_id":"astral-angular-annotate","_rev":"5-a0acd85e9188d21a0e733cd3c807d499","name":"astral-angular-annotate","description":"AngularJS DI annotation pass for astral","dist-tags":{"latest":"0.0.2"},"versions":{"0.0.1":{"name":"astral-angular-annotate","version":"0.0.1","description":"AngularJS DI annotation pass for astral","main":"annotate.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git://github.com/btford/astral-angular-annotate.git"},"keywords":["astral","angular"],"author":{"name":"Brian Ford"},"license":"MIT","readmeFilename":"README.md","dependencies":{"astral-pass":"~0.1.0","clone":"~0.1.9"},"readme":"# Astral Angular Annotator\n\nA pass for [Astral](https://github.com/btford/astral) to generate [AngularJS](http://angularjs.org) [DI annotations](TODO: find docs) automatically.\n\nFor a tool CLI, see `[ngmin](TODO: link).\n\n## Usage\n\nBelow is an example parsing, annotating, and generating JavaScript code. Note that this requires the `esprima`, `escodegen`, `astral`, and `astral-angular-annotator` npm packages.\n\n```javascript\nvar esprima = require('esprima'),\n  escodegen = require('escodegen'),\n  astral = require('astral')();\n\n// register angular annotator pass\nrequire('astral-angular-annotator')(astral);\n\nvar inputCode = \"angular.module('myMod').controller('FooCtrl', function ($scope) {\" +\n\"  // ...\" +\n\"});\";\n\nvar ast = esprima.parse(inputCode, {\n  tolerant: true\n});\n\nastral.run(ast);\n\nvar generatedCode = escodegen.generate(ast, {\n  format: {\n    indent: {\n      style: '  '\n    }\n  }\n});\n\nconsole.log(generatedCode);\n\n// logs:\n//\n// angular.module('myMod').controller('FooCtrl', ['$scope', function ($scope) {\n//   // ...\n// });\n\n```\n\n## API\n\nYou can also access each of the individual passes like this:\n\n```\n\n```\n\nThis might be handy for more fine-tuned control.\n\n## License\nMIT\n","bugs":{"url":"https://github.com/btford/astral-angular-annotate/issues"},"_id":"astral-angular-annotate@0.0.1","dist":{"shasum":"8dfed9b2e95406d7b4dbbbc8439d03d4660855ca","tarball":"http://registry.npmjs.org/astral-angular-annotate/-/astral-angular-annotate-0.0.1.tgz"},"_from":".","_npmVersion":"1.2.24","_npmUser":{"name":"btford","email":"briantford@gmail.com"},"maintainers":[{"name":"btford","email":"briantford@gmail.com"}],"directories":{}},"0.0.2":{"name":"astral-angular-annotate","version":"0.0.2","description":"AngularJS DI annotation pass for astral","main":"annotate.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git://github.com/btford/astral-angular-annotate.git"},"keywords":["astral","angular"],"author":{"name":"Brian Ford"},"license":"MIT","readmeFilename":"README.md","dependencies":{"astral-pass":"~0.1.0","clone":"~0.1.9"},"readme":"# Astral Angular Annotator\n\nA pass for [Astral](https://github.com/btford/astral) to generate [AngularJS](http://angularjs.org) [DI annotations](TODO: find docs) automatically.\n\nFor a tool CLI, see `[ngmin](TODO: link).\n\n## Usage\n\nBelow is an example parsing, annotating, and generating JavaScript code. Note that this requires the `esprima`, `escodegen`, `astral`, and `astral-angular-annotator` npm packages.\n\n```javascript\nvar esprima = require('esprima'),\n  escodegen = require('escodegen'),\n  astral = require('astral')();\n\n// register angular annotator pass\nrequire('astral-angular-annotator')(astral);\n\nvar inputCode = \"angular.module('myMod').controller('FooCtrl', function ($scope) {\" +\n\"  // ...\" +\n\"});\";\n\nvar ast = esprima.parse(inputCode, {\n  tolerant: true\n});\n\nastral.run(ast);\n\nvar generatedCode = escodegen.generate(ast, {\n  format: {\n    indent: {\n      style: '  '\n    }\n  }\n});\n\nconsole.log(generatedCode);\n\n// logs:\n//\n// angular.module('myMod').controller('FooCtrl', ['$scope', function ($scope) {\n//   // ...\n// });\n\n```\n\n## API\n\nYou can also access each of the individual passes like this:\n\n```\n\n```\n\nThis might be handy for more fine-tuned control.\n\n## License\nMIT\n","bugs":{"url":"https://github.com/btford/astral-angular-annotate/issues"},"_id":"astral-angular-annotate@0.0.2","dist":{"shasum":"23894d734818840834cd3573a54dae356632a189","tarball":"http://registry.npmjs.org/astral-angular-annotate/-/astral-angular-annotate-0.0.2.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"btford","email":"briantford@gmail.com"},"maintainers":[{"name":"btford","email":"briantford@gmail.com"}],"directories":{}}},"readme":"# Astral Angular Annotator\n\nA pass for [Astral](https://github.com/btford/astral) to generate [AngularJS](http://angularjs.org) [DI annotations](TODO: find docs) automatically.\n\nFor a tool CLI, see `[ngmin](TODO: link).\n\n## Usage\n\nBelow is an example parsing, annotating, and generating JavaScript code. Note that this requires the `esprima`, `escodegen`, `astral`, and `astral-angular-annotator` npm packages.\n\n```javascript\nvar esprima = require('esprima'),\n  escodegen = require('escodegen'),\n  astral = require('astral')();\n\n// register angular annotator pass\nrequire('astral-angular-annotator')(astral);\n\nvar inputCode = \"angular.module('myMod').controller('FooCtrl', function ($scope) {\" +\n\"  // ...\" +\n\"});\";\n\nvar ast = esprima.parse(inputCode, {\n  tolerant: true\n});\n\nastral.run(ast);\n\nvar generatedCode = escodegen.generate(ast, {\n  format: {\n    indent: {\n      style: '  '\n    }\n  }\n});\n\nconsole.log(generatedCode);\n\n// logs:\n//\n// angular.module('myMod').controller('FooCtrl', ['$scope', function ($scope) {\n//   // ...\n// });\n\n```\n\n## API\n\nYou can also access each of the individual passes like this:\n\n```\n\n```\n\nThis might be handy for more fine-tuned control.\n\n## License\nMIT\n","maintainers":[{"name":"btford","email":"briantford@gmail.com"}],"time":{"modified":"2013-07-02T00:24:53.856Z","created":"2013-06-05T14:24:59.520Z","0.0.1":"2013-06-05T14:25:00.477Z","0.0.2":"2013-07-02T00:24:53.856Z"},"author":{"name":"Brian Ford"},"repository":{"type":"git","url":"git://github.com/btford/astral-angular-annotate.git"},"_attachments":{},"_etag":"\"7WZPM0QYLYMOATBVTO8I7JBLF\""}