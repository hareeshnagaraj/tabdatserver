{"_id":"should","_rev":"139-f1a78b038d917ee21f2e580f0811459c","name":"should","description":"test framework agnostic BDD-style assertions","dist-tags":{"latest":"4.0.4"},"versions":{"0.0.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.0.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"keywords":["test","bdd","assert"],"main":"./lib/should","engines":{"node":">= 0.2.0"},"_id":"should@0.0.1","_nodeSupported":true,"_npmVersion":"0.2.7-3","_nodeVersion":"v0.2.5","dist":{"tarball":"http://registry.npmjs.org/should/-/should-0.0.1.tgz","shasum":"bff3e95ee1bf45af7733668d4fe8627fafa63358"},"directories":{}},"0.0.2":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.0.2","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"keywords":["test","bdd","assert"],"main":"./lib/should","engines":{"node":">= 0.2.0"},"_id":"should@0.0.2","_nodeSupported":true,"_npmVersion":"0.2.7-3","_nodeVersion":"v0.2.5","dist":{"tarball":"http://registry.npmjs.org/should/-/should-0.0.2.tgz","shasum":"a870abc55d6f3b74f673b7d901d1b12e68becedd"},"directories":{}},"0.0.3":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.0.3","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"keywords":["test","bdd","assert"],"main":"./lib/should","engines":{"node":">= 0.2.0"},"_id":"should@0.0.3","_nodeSupported":true,"_npmVersion":"0.2.7-3","_nodeVersion":"v0.2.5","dist":{"tarball":"http://registry.npmjs.org/should/-/should-0.0.3.tgz","shasum":"fb10472ef957b18cafe2df1172ac762d6af13b4d"},"directories":{}},"0.0.4":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.0.4","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"keywords":["test","bdd","assert"],"main":"./lib/should","engines":{"node":">= 0.2.0"},"_id":"should@0.0.4","_nodeSupported":true,"_npmVersion":"0.2.8-1","_nodeVersion":"v0.2.5","dist":{"tarball":"http://registry.npmjs.org/should/-/should-0.0.4.tgz","shasum":"bfb8c2ee0866bcd8706c88fa4ffd521323d99259"},"directories":{}},"0.1.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.1.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_id":"should@0.1.0","_engineSupported":true,"_npmVersion":"0.3.15","_nodeVersion":"v0.4.4","directories":{"lib":"./lib"},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"140ac5ad733d3f63b3a39a387144b8e4a37b53da","tarball":"http://registry.npmjs.org/should/-/should-0.1.0.tgz"}},"0.2.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.2.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_id":"should@0.2.0","_engineSupported":true,"_npmVersion":"0.3.18","_nodeVersion":"v0.4.6","directories":{"lib":"./lib"},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"8a5fc3d23f32272fb638f6f6a2ffca06ddf72e02","tarball":"http://registry.npmjs.org/should/-/should-0.2.0.tgz"}},"0.2.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.2.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"dependencies":{},"devDependencies":{},"_id":"should@0.2.1","_engineSupported":true,"_npmVersion":"1.0.3","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"5456ca01063d3abeb26b9fe4c918c517deee058d","tarball":"http://registry.npmjs.org/should/-/should-0.2.1.tgz"},"scripts":{},"directories":{}},"0.3.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.3.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_npmJsonOpts":{"file":"/Users/tj/.npm/should/0.3.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"should@0.3.0","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"ccfeb2671f4f3458a6542e987ea27249d0c3fe29","tarball":"http://registry.npmjs.org/should/-/should-0.3.0.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.3.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.3.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_npmJsonOpts":{"file":"/Users/tj/.npm/should/0.3.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"should@0.3.1","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"23924fa778ec7e5cfbd6746dc5a9c7f175ce1be4","tarball":"http://registry.npmjs.org/should/-/should-0.3.1.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.3.2":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.3.2","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"expresso":"0.9.2","should":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_npmJsonOpts":{"file":"/Users/tj/.npm/should/0.3.2/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"should@0.3.2","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.5.9","_defaultsLoaded":true,"dist":{"shasum":"6fff9bdc8bebf422ad8f54b6ef708b0dba5116af","tarball":"http://registry.npmjs.org/should/-/should-0.3.2.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.4.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.4.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*","should":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"should@0.4.0","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"1ecd6827aec709844198dd3d57605e7433cf05ea","tarball":"http://registry.npmjs.org/should/-/should-0.4.0.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.4.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.4.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*","should":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"should@0.4.1","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"b9a583f01ecd14491ca6aa60a30d9bf6b97a9542","tarball":"http://registry.npmjs.org/should/-/should-0.4.1.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.4.2":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.4.2","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*","should":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"should@0.4.2","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"b365452b42f370dfdc7fd6d1c00ee1c6df1ff2c7","tarball":"http://registry.npmjs.org/should/-/should-0.4.2.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.5.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.5.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*","should":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"should@0.5.0","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"e55b4c9794373ad0ee9da152f4b4ce4200ddd140","tarball":"http://registry.npmjs.org/should/-/should-0.5.0.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.5.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.5.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*","should":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"should@0.5.1","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"3729f1c791415ab56406d6e9d7bd65368ac2ef1b","tarball":"http://registry.npmjs.org/should/-/should-0.5.1.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.6.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.6.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*","should":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"should@0.6.0","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.10","_defaultsLoaded":true,"dist":{"shasum":"87dd3f6a3eeade91a8224c779638e46b180c2a88","tarball":"http://registry.npmjs.org/should/-/should-0.6.0.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.6.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.6.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"should@0.6.1","dependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.12","_defaultsLoaded":true,"dist":{"shasum":"70072db8fb46a6d5a784f935e6b4e76ff5576fa1","tarball":"http://registry.npmjs.org/should/-/should-0.6.1.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.6.2":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.6.2","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"should@0.6.2","dependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.9","_defaultsLoaded":true,"dist":{"shasum":"081976f8b0e679cbba578805373423aabf36c1ce","tarball":"http://registry.npmjs.org/should/-/should-0.6.2.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.6.3":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"0.6.3","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"should@0.6.3","dependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.9","_defaultsLoaded":true,"dist":{"shasum":"d4b55335c8908f3a6c47970b687f750372acdc73","tarball":"http://registry.npmjs.org/should/-/should-0.6.3.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"1.0.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_id":"should@1.0.0","dist":{"shasum":"32b076092224ef571b7471cff3c42afebb957a2b","tarball":"http://registry.npmjs.org/should/-/should-1.0.0.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.1.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"1.1.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_id":"should@1.1.0","dist":{"shasum":"9409922669d5e0624758507692fd16a8f304b34c","tarball":"http://registry.npmjs.org/should/-/should-1.1.0.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.1.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"1.1.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_id":"should@1.1.1","dist":{"shasum":"6d53421aff1b0672bc5bb4755a075606f58eba2d","tarball":"http://registry.npmjs.org/should/-/should-1.1.1.tgz"},"_npmVersion":"1.1.61","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.2.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"1.2.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_id":"should@1.2.0","dist":{"shasum":"2c9eb81c612cb2e1462c0c696a5c6039436d0bc5","tarball":"http://registry.npmjs.org/should/-/should-1.2.0.tgz"},"_npmVersion":"1.1.61","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.2.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"1.2.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_id":"should@1.2.1","dist":{"shasum":"4a1828941ccbc638d53c79e4ef17e533328581b8","tarball":"http://registry.npmjs.org/should/-/should-1.2.1.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.2.2":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"1.2.2","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"_id":"should@1.2.2","dist":{"shasum":"0f03f775066d9ea2632690c917b12824fcc1d582","tarball":"http://registry.npmjs.org/should/-/should-1.2.2.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.3.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"1.3.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"scripts":{"test":"make test"},"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@1.3.0","dist":{"shasum":"20b71a09b5ed16146b903022bd306ef332efe873","tarball":"http://registry.npmjs.org/should/-/should-1.3.0.tgz"},"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"}],"directories":{}},"2.0.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"2.0.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"scripts":{"test":"make test"},"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@2.0.0","dist":{"shasum":"fb5790ec552e09b5e63425bd01e5505f877e626e","tarball":"http://registry.npmjs.org/should/-/should-2.0.0.tgz"},"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"}],"directories":{}},"2.0.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"2.0.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"scripts":{"test":"make test"},"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@2.0.1","dist":{"shasum":"d244c90bb919f3e51dca472ef7d93c244eb7b79a","tarball":"http://registry.npmjs.org/should/-/should-2.0.1.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"2.0.2":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"2.0.2","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"scripts":{"test":"make test"},"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@2.0.2","dist":{"shasum":"df48464e0804aa5db723277bb30a998ebc8a0857","tarball":"http://registry.npmjs.org/should/-/should-2.0.2.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"2.1.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"2.1.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"scripts":{"test":"make test"},"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@2.1.0","dist":{"shasum":"6bffa59a47892206fed91fe0f2b7217bda61e9ca","tarball":"http://registry.npmjs.org/should/-/should-2.1.0.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"2.1.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"2.1.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","contributors":[{"name":"Aseem Kishore","email":"aseem.kishore@gmail.com"}],"scripts":{"test":"make test"},"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","engines":{"node":">= 0.2.0"},"bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@2.1.1","dist":{"shasum":"c648b13a8b464465c2f838ea0c93f12e4ae06c6b","tarball":"http://registry.npmjs.org/should/-/should-2.1.1.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"3.0.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"3.0.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","scripts":{"test":"make test"},"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/node.js","engines":{"node":">= 0.2.0"},"bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@3.0.0","dist":{"shasum":"750ae3e07304d7a423f3cb80c52d96a302930e80","tarball":"http://registry.npmjs.org/should/-/should-3.0.0.tgz"},"_from":".","_npmVersion":"1.3.21","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"3.0.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"3.0.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","scripts":{"test":"make test"},"devDependencies":{"mocha":"*"},"keywords":["test","bdd","assert"],"main":"./lib/node.js","engines":{"node":">= 0.2.0"},"bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@3.0.1","dist":{"shasum":"b30fff8968b4701e2ea499de91d9b0ea4d37623e","tarball":"http://registry.npmjs.org/should/-/should-3.0.1.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"travisjeffery","email":"tj@travisjeffery.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"3.1.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"3.1.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","scripts":{"test":"make test"},"devDependencies":{"mocha":"*","jsdom":"*","jquery":"*"},"keywords":["test","bdd","assert"],"main":"./lib/node.js","engines":{"node":">= 0.2.0"},"bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@3.1.0","dist":{"shasum":"491936b752cb2bd7df77bc17e12e226960b635af","tarball":"http://registry.npmjs.org/should/-/should-3.1.0.tgz"},"_from":".","_npmVersion":"1.3.21","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"3.1.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"3.1.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","scripts":{"test":"make test"},"devDependencies":{"mocha":"*","jsdom":"*","jquery":"*"},"keywords":["test","bdd","assert"],"main":"./lib/node.js","engines":{"node":">= 0.2.0"},"bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@3.1.1","dist":{"shasum":"baf3396ba0fb42644bd5e0986cfd120140e904e5","tarball":"http://registry.npmjs.org/should/-/should-3.1.1.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"3.1.2":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"3.1.2","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","scripts":{"test":"make test"},"devDependencies":{"mocha":"*","jsdom":"*","jquery":"*"},"keywords":["test","bdd","assert"],"main":"./lib/node.js","engines":{"node":">= 0.2.0"},"bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@3.1.2","dist":{"shasum":"4bc206253d736c2fb902153477982c2b2e988c02","tarball":"http://registry.npmjs.org/should/-/should-3.1.2.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"3.1.3":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"3.1.3","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","scripts":{"test":"make test"},"devDependencies":{"browserify":"*","mocha":"*","jsdom":"*","jquery":"*","mocha-better-spec-reporter":"0.0.2"},"keywords":["test","bdd","assert"],"main":"./lib/node.js","engines":{"node":">= 0.2.0"},"bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@3.1.3","dist":{"shasum":"900ff485c1497f873de0aa3bfcf9d8b913fdda24","tarball":"http://registry.npmjs.org/should/-/should-3.1.3.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"3.1.4":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"3.1.4","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","scripts":{"test":"make test"},"devDependencies":{"browserify":"*","mocha":"*","jsdom":"*","jquery":"*","mocha-better-spec-reporter":"0.0.2"},"keywords":["test","bdd","assert"],"main":"./lib/node.js","bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@3.1.4","dist":{"shasum":"ac280c6e5fc9d35c77d68b95ef1bc60bd554a731","tarball":"http://registry.npmjs.org/should/-/should-3.1.4.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"3.2.0-beta1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"3.2.0-beta1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","scripts":{"test":"make test"},"devDependencies":{"browserify":"*","mocha":"*","jsdom":"*","jquery":"*","mocha-better-spec-reporter":"0.0.2"},"keywords":["test","bdd","assert"],"main":"./lib/node.js","bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@3.2.0-beta1","dist":{"shasum":"91481d7eb1a8c1329616a8544ccec05c6a47354c","tarball":"http://registry.npmjs.org/should/-/should-3.2.0-beta1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"3.2.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"3.2.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","scripts":{"test":"make test"},"devDependencies":{"browserify":"*","mocha":"*","jsdom":"*","jquery":"*","mocha-better-spec-reporter":"0.0.2"},"keywords":["test","bdd","assert"],"main":"./lib/node.js","bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@3.2.0","dist":{"shasum":"0dbbaec439c37eac010d4c0c2304815598be659f","tarball":"http://registry.npmjs.org/should/-/should-3.2.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"3.3.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"3.3.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","scripts":{"test":"make test"},"devDependencies":{"browserify":"*","mocha":"*","jsdom":"*","jquery":"*","mocha-better-spec-reporter":"0.0.2"},"keywords":["test","bdd","assert"],"main":"./lib/node.js","bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@3.3.0","dist":{"shasum":"88b1adeab97d8811e0e479e3b93d7f1c1bd5bbca","tarball":"http://registry.npmjs.org/should/-/should-3.3.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"3.3.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"3.3.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","scripts":{"test":"make test"},"devDependencies":{"browserify":"*","mocha":"*","jsdom":"*","jquery":"*","mocha-better-spec-reporter":"0.0.2"},"keywords":["test","bdd","assert"],"main":"./lib/node.js","bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@3.3.1","dist":{"shasum":"28c93a522ba001146af96078f0a88bf5ac929522","tarball":"http://registry.npmjs.org/should/-/should-3.3.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"3.3.2":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"3.3.2","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/should.js.git"},"homepage":"https://github.com/visionmedia/should.js","scripts":{"test":"make test"},"devDependencies":{"browserify":"*","mocha":"*","jsdom":"*","jquery":"*","mocha-better-spec-reporter":"0.0.2"},"keywords":["test","bdd","assert"],"main":"./lib/node.js","bugs":{"url":"https://github.com/visionmedia/should.js/issues"},"_id":"should@3.3.2","dist":{"shasum":"c883dd409b53bbdf1b55ec0d8fc3865f2b287e64","tarball":"http://registry.npmjs.org/should/-/should-3.3.2.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"4.0.0":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"4.0.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/shouldjs/should.js.git"},"homepage":"https://github.com/shouldjs/should.js","scripts":{"test":"gulp test","zuul":"zuul -- ./test/**/*.test.js ./test/*.test.js"},"devDependencies":{"browserify":"latest","mocha-better-spec-reporter":"0.0.2","gulp-mocha":"^0.4.1","gulp-uglify":"^0.3.0","gulp-util":"^2.2.14","gulp":"^3.6.2","vinyl-source-stream2":"^0.1.1","gulp-load-plugins":"^0.5.1","gulp-rename":"^1.2.0","gulp-header":"^1.0.2","mocha":"^1.19.0","zuul":"^1.6.5"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","license":"MIT","bugs":{"url":"https://github.com/shouldjs/should.js/issues"},"_id":"should@4.0.0","dist":{"shasum":"3f1cf0f161c2993c892f6ca5e57a7038a5c071ac","tarball":"http://registry.npmjs.org/should/-/should-4.0.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"4.0.1":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"4.0.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/shouldjs/should.js.git"},"homepage":"https://github.com/shouldjs/should.js","scripts":{"test":"gulp test","zuul":"zuul -- ./test/**/*.test.js ./test/*.test.js"},"devDependencies":{"browserify":"latest","mocha-better-spec-reporter":"0.0.2","gulp-mocha":"^0.4.1","gulp-uglify":"^0.3.0","gulp-util":"^2.2.14","gulp":"^3.6.2","vinyl-source-stream2":"^0.1.1","gulp-load-plugins":"^0.5.1","gulp-rename":"^1.2.0","gulp-header":"^1.0.2","mocha":"^1.19.0","zuul":"^1.6.5"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","license":"MIT","bugs":{"url":"https://github.com/shouldjs/should.js/issues"},"_id":"should@4.0.1","dist":{"shasum":"afa782a0ad3c4f7511f78b317b5a135ba32d30cb","tarball":"http://registry.npmjs.org/should/-/should-4.0.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"4.0.3":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"4.0.3","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/shouldjs/should.js.git"},"homepage":"https://github.com/shouldjs/should.js","scripts":{"test":"gulp test","zuul":"zuul -- ./test/**/*.test.js ./test/*.test.js"},"devDependencies":{"browserify":"latest","mocha-better-spec-reporter":"0.0.2","gulp-mocha":"^0.4.1","gulp-uglify":"^0.3.0","gulp-util":"^2.2.14","gulp":"^3.6.2","vinyl-source-stream2":"^0.1.1","gulp-load-plugins":"^0.5.1","gulp-rename":"^1.2.0","gulp-header":"^1.0.2","mocha":"^1.19.0","zuul":"^1.6.5"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","license":"MIT","bugs":{"url":"https://github.com/shouldjs/should.js/issues"},"_id":"should@4.0.3","dist":{"shasum":"2711897494e7b0eb429aad16cc88c9594f9c230e","tarball":"http://registry.npmjs.org/should/-/should-4.0.3.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}},"4.0.4":{"name":"should","description":"test framework agnostic BDD-style assertions","version":"4.0.4","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/shouldjs/should.js.git"},"homepage":"https://github.com/shouldjs/should.js","scripts":{"test":"gulp test","zuul":"zuul -- ./test/**/*.test.js ./test/*.test.js"},"devDependencies":{"browserify":"latest","mocha-better-spec-reporter":"0.0.2","gulp-mocha":"^0.4.1","gulp-uglify":"^0.3.0","gulp-util":"^2.2.14","gulp":"^3.6.2","vinyl-source-stream2":"^0.1.1","gulp-load-plugins":"^0.5.1","gulp-rename":"^1.2.0","gulp-header":"^1.0.2","mocha":"^1.19.0","zuul":"^1.6.5"},"keywords":["test","bdd","assert"],"main":"./lib/should.js","license":"MIT","bugs":{"url":"https://github.com/shouldjs/should.js/issues"},"_id":"should@4.0.4","dist":{"shasum":"8efaa304f1f148cf3d2e955862990f9ab9ea628f","tarball":"http://registry.npmjs.org/should/-/should-4.0.4.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"btd","email":"bardadymchik@gmail.com"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"directories":{}}},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"gjohnson","email":"gjj391@gmail.com"},{"name":"travisjeffery","email":"tj@travisjeffery.com"},{"name":"btd","email":"bardadymchik@gmail.com"}],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"time":{"modified":"2014-06-11T10:13:08.942Z","created":"2011-04-06T16:44:36.271Z","0.0.1":"2011-04-06T16:44:36.271Z","0.0.2":"2011-04-06T16:44:36.271Z","0.0.3":"2011-04-06T16:44:36.271Z","0.0.4":"2011-04-06T16:44:36.271Z","0.1.0":"2011-04-06T16:44:36.271Z","0.2.0":"2011-04-18T02:19:45.548Z","0.2.1":"2011-05-13T16:17:19.298Z","0.3.0":"2011-08-20T19:36:23.873Z","0.3.1":"2011-08-22T18:54:56.459Z","0.3.2":"2011-10-24T20:59:47.487Z","0.4.0":"2011-12-16T22:33:03.877Z","0.4.1":"2011-12-17T00:58:31.688Z","0.4.2":"2011-12-17T18:44:08.619Z","0.5.0":"2012-01-12T11:33:47.871Z","0.5.1":"2012-01-14T03:25:57.419Z","0.6.0":"2012-03-01T21:03:34.833Z","0.6.1":"2012-04-10T19:29:52.428Z","0.6.2":"2012-04-26T15:40:02.215Z","0.6.3":"2012-04-26T23:13:11.889Z","1.0.0":"2012-07-17T15:50:34.942Z","1.1.0":"2012-07-31T04:31:04.357Z","1.1.1":"2012-09-19T16:40:57.158Z","1.2.0":"2012-10-02T15:47:58.017Z","1.2.1":"2012-11-02T16:31:15.135Z","1.2.2":"2013-02-19T19:22:16.010Z","1.3.0":"2013-09-13T16:20:47.344Z","2.0.0":"2013-10-10T15:58:28.125Z","2.0.1":"2013-10-10T18:09:09.760Z","2.0.2":"2013-10-21T09:41:15.257Z","2.1.0":"2013-11-11T06:58:59.071Z","2.1.1":"2013-12-05T12:53:30.171Z","3.0.0":"2014-01-17T08:57:57.420Z","3.0.1":"2014-01-17T20:53:12.394Z","3.1.0":"2014-01-23T09:22:27.883Z","3.1.1":"2014-01-27T20:26:06.298Z","3.1.2":"2014-01-28T08:42:41.592Z","3.1.3":"2014-02-25T04:58:14.527Z","3.1.4":"2014-03-18T14:41:16.988Z","3.2.0-beta1":"2014-03-20T09:59:53.544Z","3.2.0":"2014-03-29T17:47:47.771Z","3.3.0":"2014-04-07T09:02:42.241Z","3.3.1":"2014-04-16T08:14:42.278Z","3.3.2":"2014-05-23T17:42:45.145Z","4.0.0":"2014-05-29T14:44:08.274Z","4.0.1":"2014-06-04T14:26:47.986Z","4.0.3":"2014-06-09T10:10:55.478Z","4.0.4":"2014-06-09T13:51:38.705Z"},"users":{"kevinohara80":true,"coiscir":true,"fgribreau":true,"pid":true,"p-baleine":true,"bryanburgers":true,"sandeepmistry":true,"fiveisprime":true,"rwillrich":true,"maxmaximov":true,"fibo":true,"frankblizzard":true,"morganherlocker":true,"tigefa":true,"denisix":true,"aw":true,"jsdevel":true,"fmm":true,"evkline":true,"funroll":true,"lobodpav":true,"jbdoumenjou":true,"tiger2wander":true,"oroce":true},"repository":{"type":"git","url":"https://github.com/shouldjs/should.js.git"},"readme":"# should.js\n\n[![Build Status](https://travis-ci.org/shouldjs/should.js.svg?branch=master)](https://travis-ci.org/shouldjs/should.js)\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/shouldjs.svg)](https://saucelabs.com/u/shouldjs)\n\n_should_ is an expressive, readable, framework-agnostic assertion library. The main goals of this library are __to be expressive__ and __to be helpful__. It keeps your test code clean, and your error messages helpful.\n\n_should_ extends the `Object.prototype` with a single non-enumerable getter that allows you to express how that object should behave. It also returns itself when required with `require`.\n\n### Breaking changes for 4.x\n\nPlease check [wiki](https://github.com/shouldjs/should.js/wiki/Breaking-changes-4.x).\n\n## Example\n```javascript\nvar should = require('should');\n\nvar user = {\n    name: 'tj'\n  , pets: ['tobi', 'loki', 'jane', 'bandit']\n};\n\nuser.should.have.property('name', 'tj');\nuser.should.have.property('pets').with.lengthOf(4);\n\n// If the object was created with Object.create(null)\n// then it doesn't inherit `Object.prototype`, so it will not have `.should` getter\n// so you can do:\nshould(user).have.property('name', 'tj');\n\n// also you can test in that way for null's\nshould(null).not.be.ok;\n\nsomeAsyncTask(foo, function(err, result){\n  should.not.exist(err);\n  should.exist(result);\n  result.bar.should.equal(foo);\n});\n```\n## To begin\n\n 1. Install it:\n\n    ```bash\n    $ npm install should --save-dev\n    ```\n\n 2. Require it and use:\n\n    ```js\n    var should = require('should');\n\n    (5).should.be.exactly(5).and.be.a.Number;\n    ```\n\n## In browser\n\nWell, even when browsers by complains of authors has 100% es5 support, it does not mean it has not bugs. Please see [wiki](https://github.com/shouldjs/should.js/wiki/Known-Bugs) for known bugs.\n\nIf you want to use _should_ in browser, use the `should.js` file in the root of this repository, or build it yourself. To build a fresh version:\n\n```bash\n$ npm install\n$ gulp script\n```\n\nThe script is exported to `window.Should`. It is the same as using `should` statically:\n\n```js\nShould(5).be.exactly(5)\n```\n\nAlso, in the case of node.js, `Object.prototype` is extended with `should` (hence the capital S in `window.Should`):\n\n```js\nwindow.should.be.exactly(window);\n// the same\n// window is host object\nshould.be.exactly(window);\n// you should not really care about it\n\n(5).should.be.exactly(5);\n```\nYou can easy install it with npm or bower:\n```\nnpm install should --save-dev\n# or\nbower install shouldjs/should.js\n```\n\n## Static should and assert module\n\nFor some rare cases _should_ can be used statically, without `Object.prototype`.\nIt can be a replacement for the node assert module:\n\n```javascript\nassert.fail(actual, expected, message, operator) // just write wrong should assertion\nassert(value, message), assert.ok(value, [message]) // should(value).ok\nassert.equal(actual, expected, [message]) // should(actual).eql(expected, [message])\nassert.notEqual(actual, expected, [message]) // should(actual).not.eql(expected, [message])\nassert.deepEqual(actual, expected, [message]) // should(actual).eql(expected, [message])\nassert.notDeepEqual(actual, expected, [message]) // should(actual).not.eql(expected, [message])\nassert.strictEqual(actual, expected, [message]) // should(actual).equal(expected, [message])\nassert.notStrictEqual(actual, expected, [message]) // should(actual).not.equal(expected, [message])\nassert.throws(block, [error], [message]) // should(block).throw([error])\nassert.doesNotThrow(block, [message]) // should(block).not.throw([error])\nassert.ifError(value) // should(value).Error (to check if it is error) or should(value).not.ok (to check that it is falsy)\n```\n\n## .not\n\n`.not` negates the current assertion.\n\n## .any\n\n`.any` allow for assertions with multiple parameters to assert any of the parameters (but not all). This is similar to the native JavaScript [array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).\n\n# Assertions\n## chaining assertions\n\nEvery assertion will return a `should.js`-wrapped Object, so assertions can be chained.\nTo help chained assertions read more clearly, you can use the following helpers anywhere in your chain: `.an`, `.of`, `.a`, `.and`, `.be`, `.have`, `.with`, `.is`, `.which`. Use them for better readability; they do nothing at all.\nFor example:\n```js\nuser.should.be.an.instanceOf(Object).and.have.property('name', 'tj');\nuser.pets.should.be.instanceof(Array).and.have.lengthOf(4);\n```\nAlmost all assertions return the same object - so you can easy chain them. But some (eg: `.length` and `.property`) move the assertion object to a property value, so be careful.\n\n## .ok\n\nAssert that a chained object is truthy in javascript (ie: not '', null, undefined, 0 , NaN).\n\nAssert truthfulness:\n\n```javascript\ntrue.should.be.ok;\n'yay'.should.be.ok;\n(1).should.be.ok;\n({}).should.be.ok;\n```\n\nor negated:\n\n```javascript\nfalse.should.not.be.ok;\n''.should.not.be.ok;\n(0).should.not.be.ok;\n```\n\n*Warning:* No assertions can be performed on null and undefined values.\ne.g.\n```js\n  undefined.should.not.be.ok;\n```\nwill give you `Uncaught TypeError: Cannot read property 'should' of undefined)`.\n\nIn order to test for null use\n```js\n(err === null).should.be.true;\n```\n\n## .true\n\nAssert if a chained object === true:\n\n```javascript\ntrue.should.be.true;\n'1'.should.not.be.true;\n```\n\n## .false\n\nAssert if a chained object === false:\n\n```javascript\nfalse.should.be.false;\n(0).should.not.be.false;\n```\n\n## .eql(otherValue)\n\nAssert if a chained object is *equal* to otherValue. The object is compared by its actual content, not just reference equality.\n\n```javascript\n({ foo: 'bar' }).should.eql({ foo: 'bar' });\n[1,2,3].should.eql([1,2,3]);\n// see next example it is correct, even if it is different types, but actual content the same\n[1, 2, 3].should.eql({ '0': 1, '1': 2, '2': 3 });\n```\n## .equal(otherValue) and .exactly(otherValue)\n\nAsserts if a chained object is strictly equal to `otherValue` (using `===` - no type conversion for primitive types and reference equivalence for reference types).\n\n```javascript\n(4).should.equal(4);\n'test'.should.equal('test');\n[1,2,3].should.not.equal([1,2,3]);\n(4).should.be.exactly(4);\n```\n\n## .startWith(str)\n\nAssert that a string starts with `str`.\n\n```javascript\n'foobar'.should.startWith('foo');\n'foobar'.should.not.startWith('bar');\n```\n## .endWith(str)\n\nAssert that a string ends with `str`.\n\n```javascript\n'foobar'.should.endWith('bar');\n'foobar'.should.not.endWith('foo');\n```\n\n## .within(from, to)\n\nAssert inclusive numeric range (`<= to` and `>= from`):\n```javascript\nuser.age.should.be.within(5, 50);\n(5).should.be.within(5, 10).and.within(5, 5);\n```\n\n## .approximately(num, delta)\n\nAssert a floating point number is near `num` within the `delta` margin:\n\n```javascript\n(99.99).should.be.approximately(100, 0.1);\n```\n\n## .above(num) and .greaterThan(num)\n\nAssert a numeric value is above the given value (`> num`):\n\n```javascript\nuser.age.should.be.above(5);\nuser.age.should.not.be.above(100);\n(5).should.be.above(0);\n(5).should.not.be.above(5);\n```\n\n## .below(num) and .lessThan(num)\n\nAssert a numeric value is below the given value (`< num`):\n\n```javascript\nuser.age.should.be.below(100);\nuser.age.should.not.be.below(5);\n(5).should.be.below(6);\n(5).should.not.be.below(5);\n```\n\n## .NaN\n\nAssert a numeric value is NaN:\n\n```javascript\n(undefined + 0).should.be.NaN;\n```\n\n## .Infinity\n\nAssert a numeric value is Infinity:\n\n```javascript\n(1/0).should.be.Infinity;\n```\n\n## .type(str)\n\nAssert a given object is of a particular type (using __typeof__ operator):\n```javascript\nuser.should.be.type('object');\n'test'.should.be.type('string');\n```\n\n## .instanceof(constructor) and .instanceOf(constructor)\n\nAssert a given object is an instance of `constructor` (using __instanceof__ operator):\n\n```javascript\nuser.should.be.an.instanceof(User);\n[].should.be.an.instanceOf(Array);\n```\n\n## .arguments\n\nAssert a given object is an `Arguments`:\n\n```javascript\nvar args = (function(){ return arguments; })(1,2,3);\nargs.should.be.arguments;\n[].should.not.be.arguments;\n```\n\n## .Object, .Number, .Array, .Boolean, .Function, .String, .Error\n\nAssert a given object is instance of the given constructor (shortcut for `.instanceof` assertion).\n\n```javascript\n({}).should.be.an.Object;\n(1).should.be.a.Number;\n[].should.be.an.Array.and.an.Object;\n(true).should.be.a.Boolean;\n''.should.be.a.String;\n```\n## .enumerable(name[, value])\n\nAssert a property exists, is enumerable, and has an optional value (compare using `.eql`):\n```javascript\n'asd'.should.not.have.enumerable('0');\nuser.should.have.enumerable('name');\nuser.should.have.enumerable('age', 15);\nuser.should.not.have.enumerable('rawr');\nuser.should.not.have.enumerable('age', 0);\n[1, 2].should.have.enumerable('0', 1);\n```\n\n## .property(name[, value])\n\nAssert property exists and has an optional value (compare using `.eql`):\n```javascript\nuser.should.have.property('name');\nuser.should.have.property('age', 15);\nuser.should.not.have.property('rawr');\nuser.should.not.have.property('age', 0);\n[1, 2].should.have.property('0', 1);\n```\n\n__NB__ `.property` changes the chain's object to the given property's value, so be careful when chaining after  `.property`!\n\n## .properties(propName1, propName2, ...) or .properties([propName1, propName2, ...]) or .properties(obj)\n\n`obj` should be an object that maps properties to their actual values.\n\nAssert all given properties exist and have given values (compare using `.eql`):\n\n```javascript\nuser.should.have.properties('name', 'age');\nuser.should.have.properties(['name', 'age']);\nuser.should.have.properties({\n    name: 'denis',\n    age: 24\n});\n```\n\n## .length(number) and .lengthOf(number)\n\nAssert _length_ property exists and has a value of the given number (shortcut for `.property('length', number)`):\n```javascript\nuser.pets.should.have.length(5);\nuser.pets.should.have.a.lengthOf(5);\n({ length: 10}).should.have.length(10);\n```\n\n__NB__ `.length` and `.lengthOf` change the chain's object to the given length value, so be careful when chaining!\n\n## .ownProperty(str) and .hasOwnProperty(str)\n\nAssert given object has own property (using `.hasOwnProperty`):\n```javascript\n({ foo: 'bar' }).should.have.ownProperty('foo').equal('bar');\n```\n\n__NB__ `.ownProperty` and `.hasOwnProperty` change the chain's object to the given property value, so be careful when chaining!\n\n## .empty\n\nAssert given value is empty. Strings, arrays, arguments with a length of 0, and objects without their own properties, are considered empty.\n\n```javascript\n[].should.be.empty;\n''.should.be.empty;\n({}).should.be.empty;\n(function() {\n  arguments.should.be.empty;\n})();\n```\n\n## .keys([key1, key2, ...]) and .keys(key1, key2, ...) and .key(key)\n\nAssert own object keys, which must match _exactly_,\nand will fail if you omit a key or two:\n\n```javascript\nvar obj = { foo: 'bar', baz: 'raz' };\nobj.should.have.keys('foo', 'baz');\nobj.should.have.keys(['foo', 'baz']);\n({}).should.have.keys();\n({}).should.have.keys('key'); //fail AssertionError: expected {} to have key 'key'missing keys: 'key'\n```\n\n## .propertyByPath([name1, ...]) or .propertyByPath(name1, name2, ...)\n\nAssert property exists and has optional value (compare using `.eql`):\n```javascript\nvar obj = { foo: 'bar', baz: 'raz', zad: { a: 10 } };\nobj.should.have.propertyByPath('zad', 'a');\nobj.should.not.have.propertyByPath(0, 1, 2);\n```\n\n__NB__ `.propertyByPath` changes the chain's object to the given property's value if found\n\n## .containEql(otherValue)\n\nAssert given value to contain something *.eql* to otherValue. See examples to understand better:\n\n```javascript\n'hello boy'.should.containEql('boy');\n[1,2,3].should.containEql(3);\n[[1],[2],[3]].should.containEql([3]);\n[[1],[2],[3, 4]].should.not.containEql([3]);\n\n({ b: 10 }).should.containEql({ b: 10 });\n([1, 2, { a: 10 }]).should.containEql({ a: 10 });\n[1, 2, 3].should.not.containEql({ a: 1 });\n\n[{a: 'a'}, {b: 'b', c: 'c'}].should.containEql({a: 'a'});\n[{a: 'a'}, {b: 'b', c: 'c'}].should.not.containEql({b: 'b'});\n```\n\nWhen `.containEql` check arrays it check elements to be in the same order in `otherValue` and object just to be presented.\n\n## .containDeep(otherValue)\n\nAssert given value to contain something *.eql* to otherValue within depth.\nAgain see examples:\n\n```javascript\n'hello boy'.should.containDeep('boy');\n[1,2,3].should.containDeep([3]);\n[1,2,3].should.containDeep([1, 3]);\n//but not\n[1,2,3].should.containDeep([3, 1]);\n\n({ a: { b: 10 }, b: { c: 10, d: 11, a: { b: 10, c: 11} }}).should\n  .containDeep({ a: { b: 10 }, b: { c: 10, a: { c: 11 }}});\n\n[1, 2, 3, { a: { b: { d: 12 }}}].should.containDeep([{ a: { b: {d: 12}}}]);\n\n[[1],[2],[3]].should.containDeep([[3]]);\n[[1],[2],[3, 4]].should.containDeep([[3]]);\n[{a: 'a'}, {b: 'b', c: 'c'}].should.containDeep([{a: 'a'}]);\n[{a: 'a'}, {b: 'b', c: 'c'}].should.containDeep([{b: 'b'}]);\n```\n\nIt does not search somewhere in depth it check all pattern in depth. Objects are checked\nby properties key and value; arrays are checked like sub sequences. Everyting is compared using `.eql`.\nMain difference with `.containEql` is that this assertion requires full type chain -\nif asserted value is an object, otherValue should be also an object (which is sub object of given).\nThe same is true for arrays, otherValue should be an array which compared to be subsequence of given object.\n\nAlso exists assertion `.containDeepOrdered` which check arrays in the same order.\n\n## .match(otherValue)\n\nAssert given object matches `otherValue`.\n\nGiven: String, otherValue: regexp. Uses `RegExp#exec(str)`:\n```javascript\nusername.should.match(/^\\w+$/)\n```\n\nGiven: Array, otherValue: regexp - assert each value match to regexp.\n```javascript\n['a', 'b', 'c'].should.match(/[a-z]/);\n['a', 'b', 'c'].should.not.match(/[d-z]/);\n```\n\nGiven: Object, otherValue: regexp - assert own property's values to match regexp.\n```javascript\n({ a: 'foo', c: 'barfoo' }).should.match(/foo$/);\n({ a: 'a' }).should.not.match(/^http/);\n```\n\nGiven: Anything, otherValue: function - assert if given value matched to function.\n\nFunction can use `.should` inside or return 'true' or 'false', in all other cases it do nothing. If you return value that return assertion, you will receive better error messages.\n\n```javascript\n(5).should.match(function(n) { return n > 0; });\n(5).should.not.match(function(n) { return n < 0; });\n(5).should.not.match(function(it) { it.should.be.an.Array; });\n(5).should.match(function(it) { return it.should.be.a.Number; });\n```\n\nNow compare messages:\n```javascript\n(5).should.not.match(function(it) { it.should.be.a.Number; });\n//AssertionError: expected 5 not to match [Function]\n(5).should.not.match(function(it) { return it.should.be.a.Number; });\n//AssertionError: expected 5 not to match [Function]\n//\texpected 5 to be a number\n```\n\nGiven: object, otherValue: another object - assert that object properties match to properties of another object in meaning that describe above cases. See examples:\n\n```javascript\n({ a: 10, b: 'abc', c: { d: 10 }, d: 0 }).should\n    .match({ a: 10, b: /c$/, c: function(it) { return it.should.have.property('d', 10); }});\n\n[10, 'abc', { d: 10 }, 0].should\n\t.match({ '0': 10, '1': /c$/, '2': function(it) { return it.should.have.property('d', 10); } });\n\n[10, 'abc', { d: 10 }, 0].should\n    .match([10, /c$/, function(it) { return it.should.have.property('d', 10); }]);\n```\n\n## .matchEach(otherValue)\n\nAssert given property keys and values each match given check object.\n\nIf `otherValue` is RegExp, then each property value checked to match it:\n```javascript\n(['a', 'b', 'c']).should.matchEach(/[a-c]/);\n```\n\nIf `otherValue` is Function, then check each property value and key matched it:\n```javascript\n[10, 11, 12].should.matchEach(function(it) { return it >= 10; });\n[10, 11, 12].should.matchEach(function(it) { return it >= 10; });\n```\n\nIn other cases it checks that each property value is `.eql` to `otherValue`:\n```javascript\n[10, 10].should.matchEach(10);\n```\n## .throw() and throwError()\n\nAssert an exception is thrown:\n\n```js\n(function(){\n  throw new Error('fail');\n}).should.throw();\n```\n\nAssert an exception is not thrown:\n\n```js\n(function(){\n\n}).should.not.throw();\n```\nAssert exception message matches string:\n\n```js\n(function(){\n  throw new Error('fail');\n}).should.throw('fail');\n```\n\nAssert error message matches regexp:\n\n```js\n(function(){\n  throw new Error('failed to foo');\n}).should.throw(/^fail/);\n```\n\nError properties to match some other properties (used `.match`):\n\n```js\nvar error = new Error();\nerror.a = 10;\n(function(){ throw error; }).should.throw({ a: 10 });\n\n(function(){ throw error; }).should.throw(Error, { a: 10 });\n```\n\nIf you need to pass arguments and/or context to execute function use `Function#bind(context, arg1, ...)`:\n```js\nfunction isPositive(n) {\n    if(n <= 0) throw new Error('Given number is not positive')\n}\n\nisPositive.bind(null, 10).should.not.throw();\nisPositive.bind(null, -10).should.throw();\n```\n\nIf you need to check something in an asynchronous function, you must do it in 2 steps:\n\n```js\n// first we need to check that function is called\nvar called = false;\ncollection.findOne({ _id: 10 }, function(err, res) {\n    called = true;\n\n    //second we test what you want\n    res.should.be....\n});\n\ncalled.should.be.true;\n```\n\nIn case you are using something like `Mocha`, you should use an asynchronous test, and call `done()` in the proper place to make sure that your asynchronous function is called before the test finishes.\n```js\ncollection.findOne({ _id: 10 }, function(err, res) {\n    if(err) return done(err);\n    //second we test what you want\n    res.should.be....\n\n    done();\n});\n```\n\nIn general, if you need to check that something is executed, you are best using `spies`. A good example is [sinon](http://sinonjs.org/).\n\n## Optional Error description\n\nAs it can often be difficult to ascertain exactly where failed assertions are coming from in your tests, an optional description parameter can be passed to several should matchers. The description will follow the failed assertion in the error:\n\n    (1).should.eql(0, 'some useful description')\n\n    AssertionError: some useful description\n      at Object.eql (/Users/swift/code/should.js/node_modules/should/lib/should.js:280:10)\n      ...\n\nThe methods that support this optional description are: `eql`, `equal`, `within`, `instanceof`, `above`, `below`, `match`, `length`, `property`, `ownProperty`.\n\n## Mocha example\n\nFor example you can use should with the [Mocha test framework](http://visionmedia.github.io/mocha/) by simply including it:\n\n```javascript\nvar should = require('should');\nvar mylib = require('mylib');\n\n\ndescribe('mylib', function() {\n  it('should have a version with the format #.#.#', function() {\n    lib.version.should.match(/^\\d+\\.\\d+\\.\\d+$/);\n  });\n});\n```\n\n## Contributions\n\n[Actual list of contributors](https://github.com/visionmedia/should.js/graphs/contributors) if you want to show it your friends.\n\nTo run the tests for _should_ simply run:\n\n    $ make test\n\nSee also [CONTRIBUTING](./CONTRIBUTING.md).\n\n## OMG IT EXTENDS OBJECT???!?!@\n\nYes, yes it does, with a single getter _should_, and no it won't break your code, because it does this **properly** with a non-enumerable property.\n\n## License\n\nMIT &copy; 2010-2014 TJ Holowaychuk\n","readmeFilename":"Readme.md","homepage":"https://github.com/shouldjs/should.js","keywords":["test","bdd","assert"],"bugs":{"url":"https://github.com/shouldjs/should.js/issues"},"license":"MIT","_attachments":{},"_etag":"\"7ZK17XJVUUKHLR77OLLWLK23Q\""}