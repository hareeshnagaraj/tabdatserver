{"_id":"express-session","_rev":"27-ca1e7fb8884329aae83a6006e43eb830","name":"express-session","description":"Simple session middleware for Express","dist-tags":{"latest":"1.3.1"},"versions":{"1.0.0":{"name":"express-session","version":"1.0.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com"},"main":"./index.js","dependencies":{"utils-merge":"1.0.0"},"devDependencies":{"mocha":"~1.17.0","connect":"2.13.0","supertest":"0.9.0","should":"3.1.2","cookie-signature":"1.0.3","cookie-parser":"1.0.0"},"scripts":{"test":"mocha --bail --ui bdd --reporter list -- test/*.js"},"license":"MIT","description":"Setup session store with the given `options`.","_id":"express-session@1.0.0","dist":{"shasum":"173dbe42fee00d438a60ec93f58c6c88c9bc3428","tarball":"http://registry.npmjs.org/express-session/-/express-session-1.0.0.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"shtylman","email":"shtylman@gmail.com"},"maintainers":[{"name":"shtylman","email":"shtylman@gmail.com"}],"directories":{}},"1.0.1":{"name":"express-session","version":"1.0.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com"},"main":"./index.js","dependencies":{"utils-merge":"1.0.0","cookie":"0.1.0","uid2":"0.0.3","buffer-crc32":"0.2.1","debug":"0.7.4"},"devDependencies":{"mocha":"~1.17.0","connect":"2.13.0","supertest":"0.9.0","should":"3.1.2","cookie-signature":"1.0.3","cookie-parser":"1.0.0"},"scripts":{"test":"mocha --bail --ui bdd --reporter list -- test/*.js"},"license":"MIT","description":"Setup session store with the given `options`.","_id":"express-session@1.0.1","dist":{"shasum":"61e5208471ad50e57651dcce11934c526730203f","tarball":"http://registry.npmjs.org/express-session/-/express-session-1.0.1.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"shtylman","email":"shtylman@gmail.com"},"maintainers":[{"name":"shtylman","email":"shtylman@gmail.com"}],"directories":{}},"1.0.2":{"name":"express-session","version":"1.0.2","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com"},"main":"./index.js","dependencies":{"utils-merge":"1.0.0","cookie":"0.1.0","cookie-signature":"1.0.3","uid2":"0.0.3","buffer-crc32":"0.2.1","debug":"0.7.4"},"devDependencies":{"mocha":"~1.17.0","connect":"2.13.0","supertest":"0.9.0","should":"3.1.2","cookie-parser":"1.0.0"},"scripts":{"test":"mocha --bail --ui bdd --reporter list -- test/*.js"},"license":"MIT","description":"Setup session store with the given `options`.","_id":"express-session@1.0.2","dist":{"shasum":"004478c742561774411ceb79733155a56b6d49eb","tarball":"http://registry.npmjs.org/express-session/-/express-session-1.0.2.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"shtylman","email":"shtylman@gmail.com"},"maintainers":[{"name":"shtylman","email":"shtylman@gmail.com"}],"directories":{}},"1.0.3":{"name":"express-session","version":"1.0.3","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com"},"main":"./index.js","repository":{"type":"git","url":"git://github.com/expressjs/session.git"},"dependencies":{"utils-merge":"1.0.0","cookie":"0.1.2","cookie-signature":"1.0.3","uid2":"0.0.3","buffer-crc32":"0.2.1","debug":"0.7.4"},"devDependencies":{"mocha":"~1.17.0","express":"4.0.0","supertest":"0.9.0","should":"3.1.2","cookie-parser":"1.0.1"},"scripts":{"test":"mocha --bail --ui bdd --reporter list -- test/*.js"},"license":"MIT","description":"THIS REPOSITORY NEEDS A MAINTAINER. IF YOU'RE INTERESTED IN MAINTAINING THIS REPOSITORY, PLEASE LET US KNOW!","bugs":{"url":"https://github.com/expressjs/session/issues"},"homepage":"https://github.com/expressjs/session","_id":"express-session@1.0.3","dist":{"shasum":"a45ec65dda263f74f3b5b9c6da0ac74c36ac0639","tarball":"http://registry.npmjs.org/express-session/-/express-session-1.0.3.tgz"},"_from":"https://github.com/expressjs/session/tarball/v1.0.3","_resolved":"https://github.com/expressjs/session/tarball/v1.0.3","_npmVersion":"1.4.3","_npmUser":{"name":"mscdex","email":"mscdex@mscdex.net"},"maintainers":[{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"mscdex","email":"mscdex@mscdex.net"}],"directories":{}},"1.0.4":{"name":"express-session","version":"1.0.4","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com"},"main":"./index.js","repository":{"type":"git","url":"git://github.com/expressjs/session.git"},"dependencies":{"utils-merge":"1.0.0","cookie":"0.1.2","cookie-signature":"1.0.3","uid2":"0.0.3","buffer-crc32":"0.2.1","debug":"0.8.1"},"devDependencies":{"mocha":"~1.17.0","express":"4.0.0","supertest":"0.9.0","should":"3.1.2","cookie-parser":"1.0.1"},"scripts":{"test":"mocha --bail --ui bdd --reporter list -- test/*.js"},"engines":{"node":">= 0.8.0"},"license":"MIT","description":"THIS REPOSITORY NEEDS A MAINTAINER. IF YOU'RE INTERESTED IN MAINTAINING THIS REPOSITORY, PLEASE LET US KNOW!","bugs":{"url":"https://github.com/expressjs/session/issues"},"homepage":"https://github.com/expressjs/session","_id":"express-session@1.0.4","dist":{"shasum":"a10045af3f24693c9c19b1914a11d0cab8f7b29b","tarball":"http://registry.npmjs.org/express-session/-/express-session-1.0.4.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"mscdex","email":"mscdex@mscdex.net"}],"directories":{}},"1.1.0":{"name":"express-session","version":"1.1.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com"},"main":"./index.js","repository":{"type":"git","url":"git://github.com/expressjs/session.git"},"dependencies":{"utils-merge":"1.0.0","cookie":"0.1.2","cookie-signature":"1.0.3","uid2":"0.0.3","buffer-crc32":"0.2.1","debug":"0.8.1"},"devDependencies":{"express":"4.0.0","mocha":"~1.18.2","should":"~3.3.1","supertest":"~0.12.1","cookie-parser":"1.0.1"},"scripts":{"test":"mocha --bail --ui bdd --reporter list -- test/*.js"},"engines":{"node":">= 0.8.0"},"license":"MIT","description":"THIS REPOSITORY NEEDS A MAINTAINER. IF YOU'RE INTERESTED IN MAINTAINING THIS REPOSITORY, PLEASE LET US KNOW!","bugs":{"url":"https://github.com/expressjs/session/issues"},"homepage":"https://github.com/expressjs/session","_id":"express-session@1.1.0","dist":{"shasum":"8c010bf58109ea235a65566d2a96703b41ee6eae","tarball":"http://registry.npmjs.org/express-session/-/express-session-1.1.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"mscdex","email":"mscdex@mscdex.net"}],"directories":{}},"1.2.0":{"name":"express-session","version":"1.2.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com"},"main":"./index.js","repository":{"type":"git","url":"git://github.com/expressjs/session.git"},"dependencies":{"utils-merge":"1.0.0","cookie":"0.1.2","cookie-signature":"1.0.3","on-headers":"0.0.0","uid2":"0.0.3","buffer-crc32":"0.2.1","debug":"0.8.1"},"devDependencies":{"express":"4.0.0","mocha":"~1.18.2","should":"~3.3.1","supertest":"~0.12.1","cookie-parser":"1.0.1"},"scripts":{"test":"mocha --bail --ui bdd --reporter spec -- test/*.js"},"engines":{"node":">= 0.8.0"},"license":"MIT","description":"THIS REPOSITORY NEEDS A MAINTAINER. IF YOU'RE INTERESTED IN MAINTAINING THIS REPOSITORY, PLEASE LET US KNOW!","bugs":{"url":"https://github.com/expressjs/session/issues"},"homepage":"https://github.com/expressjs/session","_id":"express-session@1.2.0","dist":{"shasum":"b18b9bf3afdcf1f94b744b1ebccbf8b155dd1fb3","tarball":"http://registry.npmjs.org/express-session/-/express-session-1.2.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"mscdex","email":"mscdex@mscdex.net"}],"directories":{}},"1.2.1":{"name":"express-session","version":"1.2.1","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com"},"main":"./index.js","repository":{"type":"git","url":"git://github.com/expressjs/session.git"},"dependencies":{"utils-merge":"1.0.0","cookie":"0.1.2","cookie-signature":"1.0.3","on-headers":"0.0.0","uid2":"0.0.3","buffer-crc32":"0.2.1","debug":"0.8.1"},"devDependencies":{"cookie-parser":"1.1.0","express":"~4.3.0","mocha":"~1.19.0","should":"~3.3.1","supertest":"~0.13.0"},"scripts":{"test":"mocha --bail --ui bdd --reporter spec -- test/*.js"},"engines":{"node":">= 0.8.0"},"license":"MIT","description":"THIS REPOSITORY NEEDS A MAINTAINER. IF YOU'RE INTERESTED IN MAINTAINING THIS REPOSITORY, PLEASE LET US KNOW!","bugs":{"url":"https://github.com/expressjs/session/issues"},"homepage":"https://github.com/expressjs/session","_id":"express-session@1.2.1","dist":{"shasum":"2741a1661eb3a4a17a7db0a48049fbf05574e465","tarball":"http://registry.npmjs.org/express-session/-/express-session-1.2.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"mscdex","email":"mscdex@mscdex.net"}],"directories":{}},"1.3.0":{"name":"express-session","version":"1.3.0","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com"},"repository":{"type":"git","url":"git://github.com/expressjs/session"},"license":"MIT","dependencies":{"buffer-crc32":"0.2.1","cookie":"0.1.2","cookie-signature":"1.0.3","debug":"1.0.2","on-headers":"0.0.0","uid2":"0.0.3","utils-merge":"1.0.0"},"devDependencies":{"cookie-parser":"1.1.0","istanbul":"0.2.10","express":"~4.4.0","mocha":"~1.20.1","should":"~4.0.4","supertest":"~0.13.0"},"engines":{"node":">= 0.8.0"},"scripts":{"test":"mocha --bail --reporter spec test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec test/"},"description":"[![NPM Version](https://badge.fury.io/js/express-session.svg)](https://badge.fury.io/js/express-session) [![Build Status](https://travis-ci.org/expressjs/session.svg?branch=master)](https://travis-ci.org/expressjs/session)","bugs":{"url":"https://github.com/expressjs/session/issues"},"homepage":"https://github.com/expressjs/session","_id":"express-session@1.3.0","dist":{"shasum":"d75b7e230237bdf0be39df1bf361642f1fe41442","tarball":"http://registry.npmjs.org/express-session/-/express-session-1.3.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"mscdex","email":"mscdex@mscdex.net"}],"directories":{}},"1.3.1":{"name":"express-session","version":"1.3.1","description":"Simple session middleware for Express","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com"},"repository":{"type":"git","url":"git://github.com/expressjs/session"},"license":"MIT","dependencies":{"buffer-crc32":"0.2.1","cookie":"0.1.2","cookie-signature":"1.0.3","debug":"1.0.2","on-headers":"0.0.0","uid2":"0.0.3","utils-merge":"1.0.0"},"devDependencies":{"cookie-parser":"1.1.0","istanbul":"0.2.10","express":"~4.4.0","mocha":"~1.20.1","should":"~4.0.4","supertest":"~0.13.0"},"engines":{"node":">= 0.8.0"},"scripts":{"test":"mocha --bail --reporter spec test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec test/"},"bugs":{"url":"https://github.com/expressjs/session/issues"},"homepage":"https://github.com/expressjs/session","_id":"express-session@1.3.1","dist":{"shasum":"c1a25e86e91a1f42cd446673536e8381d5b73222","tarball":"http://registry.npmjs.org/express-session/-/express-session-1.3.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"mscdex","email":"mscdex@mscdex.net"}],"directories":{}}},"readme":"# express-session\n\n[![NPM Version](https://badge.fury.io/js/express-session.svg)](https://badge.fury.io/js/express-session)\n[![Build Status](https://travis-ci.org/expressjs/session.svg?branch=master)](https://travis-ci.org/expressjs/session)\n\nTHIS REPOSITORY NEEDS A MAINTAINER. IF YOU'RE INTERESTED IN MAINTAINING THIS REPOSITORY, PLEASE LET US KNOW!\n\n## API\n\n```js\nvar express      = require('express')\nvar cookieParser = require('cookie-parser')\nvar session      = require('express-session')\n\nvar app = express()\n\napp.use(cookieParser()) // required before session.\napp.use(session({secret: 'keyboard cat'}))\n```\n\n\n### session(options)\n\nSetup session store with the given `options`.\n\nSession data is _not_ saved in the cookie itself, however\ncookies are used, so we must use the [cookie-parser](https://github.com/expressjs/cookie-parser)\nmiddleware _before_ `session()`.\n\n#### Options\n\n  - `name` - cookie name (formerly known as `key`). (default: `'connect.sid'`)\n  - `store` - session store instance.\n  - `secret` - session cookie is signed with this secret to prevent tampering.\n  - `cookie` - session cookie settings.\n    - (default: `{ path: '/', httpOnly: true, secure: false, maxAge: null }`)\n  - `rolling` - forces a cookie set on every response. This resets the expiration date. (default: `false`)\n  - `resave` - forces session to be saved even when unmodified. (default: `true`)\n  - `proxy` - trust the reverse proxy when setting secure cookies (via \"x-forwarded-proto\" header). When set to `true`, the \"x-forwarded-proto\" header will be used. When set to `false`, all headers are ignored. When left unset, will use the \"trust proxy\" setting from express. (default: `undefined`)\n\n\n#### Cookie options\n\nPlease note that `secure: true` is a **recommended** option. However, it requires an https-enabled website, i.e., HTTPS is necessary for secure cookies.\nIf `secure` is set, and you access your site over HTTP, the cookie will not be set. If you have your node.js behind a proxy and are using `secure: true`, you need to set \"trust proxy\" in express:\n\n```js\nvar app = express()\napp.set('trust proxy', 1) // trust first proxy\napp.use(cookieParser())\napp.use(session({\n    secret: 'keyboard cat'\n  , cookie: { secure: true }\n}))\n```\n\nFor using secure cookies in production, but allowing for testing in development, the following is an example of enabling this setup based on `NODE_ENV` in express:\n\n```js\nvar app = express()\nvar sess = {\n  secret: 'keyboard cat'\n  cookie: {}\n}\n\nif (app.get('env') === 'production') {\n  app.set('trust proxy', 1) // trust first proxy\n  sess.cookie.secure = true // serve secure cookies\n}\n\napp.use(cookieParser())\napp.use(session(sess))\n```\n\nBy default `cookie.maxAge` is `null`, meaning no \"expires\" parameter is set\nso the cookie becomes a browser-session cookie. When the user closes the\nbrowser the cookie (and session) will be removed.\n\n### req.session\n\nTo store or access session data, simply use the request property `req.session`,\nwhich is (generally) serialized as JSON by the store, so nested objects\nare typically fine. For example below is a user-specific view counter:\n\n```js\napp.use(cookieParser())\napp.use(session({ secret: 'keyboard cat', cookie: { maxAge: 60000 }}))\n\napp.use(function(req, res, next) {\n  var sess = req.session\n  if (sess.views) {\n    sess.views++\n    res.setHeader('Content-Type', 'text/html')\n    res.write('<p>views: ' + sess.views + '</p>')\n    res.write('<p>expires in: ' + (sess.cookie.maxAge / 1000) + 's</p>')\n    res.end()\n  } else {\n    sess.views = 1\n    res.end('welcome to the session demo. refresh!')\n  }\n})\n```\n\n#### Session.regenerate()\n\nTo regenerate the session simply invoke the method, once complete\na new SID and `Session` instance will be initialized at `req.session`.\n\n```js\nreq.session.regenerate(function(err) {\n  // will have a new session here\n})\n```\n\n#### Session.destroy()\n\nDestroys the session, removing `req.session`, will be re-generated next request.\n\n```js\nreq.session.destroy(function(err) {\n  // cannot access session here\n})\n```\n\n#### Session.reload()\n\nReloads the session data.\n\n```js\nreq.session.reload(function(err) {\n  // session updated\n})\n```\n\n#### Session.save()\n\n```js\nreq.session.save(function(err) {\n  // session saved\n})\n```\n\n#### Session.touch()\n\nUpdates the `.maxAge` property. Typically this is\nnot necessary to call, as the session middleware does this for you.\n\n### req.session.cookie\n\nEach session has a unique cookie object accompany it. This allows\nyou to alter the session cookie per visitor. For example we can\nset `req.session.cookie.expires` to `false` to enable the cookie\nto remain for only the duration of the user-agent.\n\n#### Cookie.maxAge\n\nAlternatively `req.session.cookie.maxAge` will return the time\nremaining in milliseconds, which we may also re-assign a new value\nto adjust the `.expires` property appropriately. The following\nare essentially equivalent\n\n```js\nvar hour = 3600000\nreq.session.cookie.expires = new Date(Date.now() + hour)\nreq.session.cookie.maxAge = hour\n```\n\nFor example when `maxAge` is set to `60000` (one minute), and 30 seconds\nhas elapsed it will return `30000` until the current request has completed,\nat which time `req.session.touch()` is called to reset `req.session.maxAge`\nto its original value.\n\n```js\nreq.session.cookie.maxAge // => 30000\n```\n\n## Session Store Implementation\n\nEvery session store _must_ implement the following methods\n\n   - `.get(sid, callback)`\n   - `.set(sid, session, callback)`\n   - `.destroy(sid, callback)`\n\nRecommended methods include, but are not limited to:\n\n   - `.length(callback)`\n   - `.clear(callback)`\n\nFor an example implementation view the [connect-redis](http://github.com/visionmedia/connect-redis) repo.\n","maintainers":[{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"mscdex","email":"mscdex@mscdex.net"}],"time":{"modified":"2014-06-14T18:41:02.875Z","created":"2014-02-16T00:49:14.605Z","1.0.0":"2014-02-16T00:49:14.605Z","1.0.1":"2014-02-16T01:16:28.643Z","1.0.2":"2014-02-23T17:02:30.300Z","1.0.3":"2014-04-20T00:46:59.408Z","1.0.4":"2014-04-28T00:32:21.447Z","1.1.0":"2014-05-12T20:19:01.866Z","1.2.0":"2014-05-19T19:46:07.180Z","1.2.1":"2014-05-27T22:24:37.588Z","1.3.0":"2014-06-14T18:29:58.785Z","1.3.1":"2014-06-14T18:41:02.875Z"},"readmeFilename":"README.md","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com"},"license":"MIT","users":{"skipzero":true,"runningtalus":true},"homepage":"https://github.com/expressjs/session","repository":{"type":"git","url":"git://github.com/expressjs/session"},"bugs":{"url":"https://github.com/expressjs/session/issues"},"_attachments":{},"_etag":"\"72IFAYGAMZOSI7GGXRN5ROSV2\""}